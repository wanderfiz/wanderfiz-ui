# Production Dockerfile for wanderfiz-ui
# Multi-stage build for optimized production image

FROM node:20-alpine AS build

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache git curl

# Copy package files
COPY package*.json ./

# Install production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build arguments for environment configuration
ARG VITE_API_BASE_URL
ARG VITE_LOG_LEVEL=info

# Set build environment variables
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ENV VITE_LOG_LEVEL=${VITE_LOG_LEVEL}
ENV NODE_ENV=production

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create nginx cache directory with proper permissions
RUN mkdir -p /var/cache/nginx/client_temp && \
    chown -R nginx:nginx /var/cache/nginx && \
    chmod -R 755 /var/cache/nginx

# Create nginx PID directory
RUN mkdir -p /var/run/nginx && \
    chown nginx:nginx /var/run/nginx

# Use non-root user
USER nginx

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]